/*
 *          *** Change Log ***

 commit 06aa099203a84415c47488341666434a0a891e00
Author: Naomi Bonnin <naomi172839@gmail.com>
Date:   Fri Feb 26 13:44:48 2021 -0500

    Added initial backend server,
    Updated models to reflect new requirements
    Updated launch scripts to reflect new server

    Signed-off-by: Naomi Bonnin <naomi172839@gmail.com>

 group5/src/server/entity/User.ts | 76 ++++++++++++++++++++++++++++++++++++++++
 1 file changed, 76 insertions(+)

 */

// TypeORM imports
import {
    Entity,
    Column,
    PrimaryGeneratedColumn,
    CreateDateColumn,
    UpdateDateColumn,
    DeleteDateColumn,
    OneToMany
} from "typeorm";

// Model imports
import { Reservation } from "./Reservation"

// The User model defines a user account
// The username must be unique
// Passwords are stored as a hash
@Entity()
export class User {

    // Auto generated UUID from TypeORM for uniqueness
    @PrimaryGeneratedColumn("uuid")
    uuid!: string;

    // Username, must be unique
    @Column({ length: 40, unique: true })
    username!: string;

    // Hash for the password for security
    @Column()
    passwordHash!: string;

    // First name of the user
    @Column()
    firstName!: string;

    // Middle name of the user, optional
    @Column({ nullable: true, default: null })
    middleName!: string;

    // Last name of the user
    @Column()
    lastName!: string;

    // Any suffix for the user, optional
    @Column({ nullable: true, default: null })
    suffix!: string;

    // Any prefix for the user, optional
    @Column({ nullable: true, default: null })
    prefix!: string;

    // Reservations associated with the user account
    @OneToMany(() => Reservation, reservation => reservation.createdBy)
    reservations!: Reservation[];

    // Flag for if this is an admin account
    @Column({ default: false })
    admin!: boolean;

    // Auto generated by TypeORM when record is created
    @CreateDateColumn()
    created!: Date;

    // Auto generated by TypeORM when record is modified
    @UpdateDateColumn()
    updated!: Date;

    // Auto generated by TypeORM when recored is deleted
    @DeleteDateColumn()
    deleted!: Date;




}
