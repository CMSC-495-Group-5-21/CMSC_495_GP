// TypeORM imports
import {
    Entity,
    Column,
    PrimaryGeneratedColumn,
    CreateDateColumn,
    UpdateDateColumn,
    DeleteDateColumn,
    ManyToOne,
    OneToMany
} from "typeorm";

import { Room } from './Room'

// The RoomType model defines a specific room type
// There can be multiple rooms with the same type
@Entity()
export class RoomType {

    // UUID auto generated by TypeORM for uniqueness
    @PrimaryGeneratedColumn("uuid")
    uuid!: string;

    // Name of the room type, must be unique
    @Column({ unique: true })
    typeName!: string;

    // The cost of the room
    @Column()
    typeCost!: number;

    // Relationship between a room and a roomType
    @OneToMany(() => Room, room => room.roomType)
    rooms!: Room[];

    // Auto generated by TypeORM when record is created
    @CreateDateColumn()
    created!: Date;

    // Auto generated by TypeORM when the record is modified
    @UpdateDateColumn()
    updated!: Date;

    // Auto generated by TypeORM when the record is deleted
    @DeleteDateColumn()
    deleted!: Date;

}
