/*
 *          *** Change Log ***

 commit f149fb209f18464fe278f6271542c2e771cb9fd8
Author: Naomi Bonnin <naomi172839@gmail.com>
Date:   Thu Mar 4 18:28:55 2021 -0500

    Made the reservation page functional

    Signed-off-by: Naomi Bonnin <naomi172839@gmail.com>

 group5/src/server/entity/Room.ts | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 06aa099203a84415c47488341666434a0a891e00
Author: Naomi Bonnin <naomi172839@gmail.com>
Date:   Fri Feb 26 13:44:48 2021 -0500

    Added initial backend server,
    Updated models to reflect new requirements
    Updated launch scripts to reflect new server

    Signed-off-by: Naomi Bonnin <naomi172839@gmail.com>

 group5/src/server/entity/Room.ts | 48 ++++++++++++++++++++++++++++++++++++++++
 1 file changed, 48 insertions(+)

 */

// TypeORM imports
import {
    Entity,
    Column,
    PrimaryGeneratedColumn,
    CreateDateColumn,
    UpdateDateColumn,
    DeleteDateColumn,
    OneToOne,
    OneToMany,
    ManyToOne,
    JoinColumn
} from "typeorm";

// Model Imports
import { RoomType } from "./RoomType";
import { Reservation } from "./Reservation";

// The Room model defines all of the rooms in the hotel
// There will be one entry per rooms
@Entity()
export class Room {

    // Auto generated UUID from TypeORM for uniqueness
    @PrimaryGeneratedColumn("uuid")
    uuid!: string;

    // Room type selection, for pricing
    @ManyToOne(() => RoomType, roomType => roomType.rooms)
    roomType!: RoomType;

    // Reservations associated with the current room
    @OneToMany(() => Reservation, reservation => reservation.assignedRoom)
    reservations!: Reservation[];

    // Auto generate by TypeORM for the creation date
    @CreateDateColumn()
    created!: Date;

    // Auto generated by TypeORM for the modified date
    @UpdateDateColumn()
    updated!: Date;

    // Auto generated by TypeORM for the deleted date
    @DeleteDateColumn()
    deleted!: Date;

}
