/*
 *          *** Change Log ***

 commit 06aa099203a84415c47488341666434a0a891e00
Author: Naomi Bonnin <naomi172839@gmail.com>
Date:   Fri Feb 26 13:44:48 2021 -0500

    Added initial backend server,
    Updated models to reflect new requirements
    Updated launch scripts to reflect new server

    Signed-off-by: Naomi Bonnin <naomi172839@gmail.com>

 group5/src/server/entity/Reservation.ts | 64 +++++++++++++++++++++++++++++++++
 1 file changed, 64 insertions(+)

 */

// TypeORM imports
import {
    Entity,
    Column,
    PrimaryGeneratedColumn,
    CreateDateColumn,
    UpdateDateColumn,
    DeleteDateColumn,
    ManyToOne,
    JoinColumn,
    ManyToMany
} from "typeorm";

// Model imports
import { User } from "./User";
import { Room } from "./Room";

// Reservation Model
// Contains all of the reservations in the system
@Entity()
export class Reservation {

    // TypeORM generated UUID for uniqueness
    @PrimaryGeneratedColumn("uuid")
    uuid!: string;

    // Start date of the reservation
    @Column()
    startDate!: Date;

    // End date of the reservation
    @Column()
    endDate!: Date;

    // Room assigned to the reservation
    @ManyToOne(() => Room, assignedRoom => assignedRoom.reservations)
    assignedRoom!: Room;

    // User who the reservation is for
    @ManyToOne(() => User, createdBy => createdBy.reservations)
    createdBy!: User;

    // If the admin created the reservation
    @Column({ default: false })
    adminCreate!: boolean;

    // Save any special requests
    @Column({ default: "None" })
    specialRequests!: string;

    // Auto generated by TypeORM for the initial creation date
    @CreateDateColumn()
    created!: Date;

    // Auto generated by TypeORM for the last updated date
    @UpdateDateColumn()
    updated!: Date;

    // Auto generated by TypeORM for the deletion (canx) date
    @DeleteDateColumn()
    deleted!: Date;


}
